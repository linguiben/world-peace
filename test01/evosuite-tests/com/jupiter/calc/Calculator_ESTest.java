/*
 * This file was automatically generated by EvoSuite
 * Sun May 07 05:58:32 GMT 2023
 */

package com.jupiter.calc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jupiter.calc.Calculator;
import java.math.BigDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Calculator_ESTest extends Calculator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      String[] stringArray0 = new String[0];
      int int0 = calculator0.sum(stringArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Calculator calculator0 = new Calculator((String) null);
      calculator0.setName("v0Q.D0_kkoYW`K*");
      String string0 = calculator0.getName();
      assertEquals("v0Q.D0_kkoYW`K*", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Calculator calculator0 = new Calculator("");
      String string0 = calculator0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      calculator0.setMv(680);
      int int0 = calculator0.getMv();
      assertEquals(680, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      calculator0.setMv((-1));
      int int0 = calculator0.getMv();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Calculator calculator0 = new Calculator((String) null);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      calculator0.setIndexValue(bigDecimal0);
      BigDecimal bigDecimal1 = calculator0.getIndexValue();
      assertEquals((short)1, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Calculator calculator0 = new Calculator("");
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      calculator0.setIndexValue(bigDecimal0);
      BigDecimal bigDecimal1 = calculator0.getIndexValue();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      BigDecimal bigDecimal0 = new BigDecimal((-3583L));
      calculator0.setIndexValue(bigDecimal0);
      BigDecimal bigDecimal1 = calculator0.getIndexValue();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      BigDecimal bigDecimal0 = new BigDecimal((-1));
      calculator0.setIndexValue(bigDecimal0);
      BigDecimal bigDecimal1 = calculator0.getIndexValue();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        calculator0.sum(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      // Undeclared exception!
      try { 
        calculator0.sum((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jupiter.calc.Calculator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Calculator calculator0 = new Calculator("9");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "9";
      stringArray0[1] = "9";
      stringArray0[2] = "9";
      stringArray0[3] = "9";
      stringArray0[4] = "9";
      stringArray0[5] = "9";
      int int0 = calculator0.sum(stringArray0);
      assertEquals(54, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.getMv();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      BigDecimal bigDecimal0 = calculator0.getIndexValue();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      String string0 = calculator0.getName();
      assertNull(string0);
  }
}
